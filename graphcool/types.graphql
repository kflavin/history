# The following types define the data model of the example service
# based on which the GraphQL API is generated

#type User @model {
#  id: ID! @isUnique
#  name: String @isUnique
#  dateOfBirth: DateTime
#
#  # Uncomment below - you can declare relations between models like this
#
#  # posts: [Post!]! @relation(name: "UserPosts")
#}


# Uncomment the model below as well

# type Post @model {
#   id: ID! @isUnique
#   title: String!
#
#   # Every relation also required a back-relation (to determine 1:1, 1:n or n:m)
#   author: User! @relation(name: "UserPosts")
# }


# added by email-password template: (please uncomment)
type User @model {
  # Required system field:
  id: ID! @isUnique # read-only (managed by Graphcool)

  # Optional system fields (remove if not needed):
  createdAt: DateTime! # read-only (managed by Graphcool)
  updatedAt: DateTime! # read-only (managed by Graphcool)

  email: String! @isUnique
  password: String!
}

type Game @model {
  id: ID! @isUnique

  createdAt: DateTime!
  updatedAt: DateTime!

  opponent: String
  home: Boolean
  score1: Int
  score2: Int
  result: RESULT! @defaultValue(value: WIN)
  date: DateTime,
  season: Int
}

enum RESULT {
  WIN
  LOSS
  TIE
}
